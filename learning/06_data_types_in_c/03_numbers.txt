Numeric Types:

use int when you need to store a whole number without decimals, like 35 or 1000, and 
float or double when you need a floating pint number (with decimals) like 9.99 or 3.14515

int ex:
int myNum = 19999;
printf("%d", myNum);

float ex:
float myFloatNum = 3.14;
printf("%f", myFloatNum);

double ex:
double myDoubleNum = 3.14159;
printf("%f", myDoubleNum);

float v/s double
the precision of a floating point value indicates how many digits the value can have
after the decimal point. the precision of float is six or seven digits,
while double varibales have a precision of about 15 digits.
therefore it is often safer to use double for most calculations- but note that it takes up twice 
as much memory as float (8 bytes vs 4 bytes)

scientific numbers:
in c, you can write very large or very small floating-point numbers using scientific notation.
this is done using the letter e(or E), which stands for "times 10 to the power of".

for example, 23e3 means 23 X 10^3, or 23,000

this is useful for writing numbers in a shorter way. Especially when working with scientific values or 
large-scale data.

float f1 = 35e3;   // 35 * 10^3 = 35000
double d1 = 12E4;  // 12 * 10^4 = 120000

printf("%f\n", f1);
printf("%lf", d1);